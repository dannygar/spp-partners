@model SportsDataLoader.Web.Models.TenantMetadataViewModel

@{
    ViewBag.Title = "Home Page";
}

@Styles.Render("~/Content/dropzonecss")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/Scripts/dropzonescripts")

<div class="jumbotron" id="uploadHeader" style="display: none">
    @using (Html.BeginForm("UploadFiles", "Home", new {tenantId = Model.TenantId, cultureCode = Model.CultureCode}, FormMethod.Post, new {enctype = "multipart/form-data", @class = "dropzone", id = "dropzoneForm"}))
    {
        <div id="dropzoneDiv">
            <h1>Drag and drop files here to upload.</h1>
            <p>
                <b>Excel files (XLSX)</b>, <b>Comma-delimited files (CSV)</b>, <b>Tab-delimited files (TXT)</b> and <b>Zip files (ZIP)</b> are currently supported. Files must be 50 MB or less.
            </p>
            <button type="button" class="btn btn-lg btn-primary" id="uploadButton">Manually Select Files</button>
        </div>
    }
</div>

<noscript>
    <div class="alert alert-danger" role="alert">
        <b>Javascript is disabled.</b> Without Javascript enabled, you will not be able to upload files. Please enable Javascript then reload this page.
    </div>

    <table class="table table-bordered">
        <thead>
        <tr>
            <th>File</th>
            <th>File Status</th>
            <th>Uploaded Date/Time (UTC)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var fileMetadata in Model.FileMetadataList)
        {
            <tr class="@fileMetadata.FileStatusClass">
                <td>
                    <span>@fileMetadata.FileName</span><br/>
                    <small>
                        <span class="text-muted">@fileMetadata.FileId</span>
                    </small>
                </td>
                <td>
                    <span class="@fileMetadata.FileStatusIcon">&nbsp;</span>@fileMetadata.FileStatusDescription
                </td>
                <td>
                    @fileMetadata.FileUploadDateTime
                </td>
            </tr>
        }
        </tbody>
    </table>
</noscript>

<div class="alert alert-danger" style="display: none" id="errorAlert" role="alert">
    <span id="errorMessage"></span>
</div>

<table class="table table-bordered" style="display: none" id="uploadTable">
    <thead>
    <tr>
        <th>File</th>
        <th>File Status</th>
        <th>Uploaded Date/Time (UTC)</th>
    </tr>
    </thead>
    <tbody data-bind="foreach: files">
    <tr data-bind="css: FileStatusClass">
        <td>
            <span data-bind="text: FileName"></span><br/>
            <small>
                <span class="text-muted" data-bind="text: FileId"></span></small>
        </td>
        <td>
            <span data-bind="css: FileStatusIcon">&nbsp;</span><span data-bind="text: FileStatusDescription"></span>
        </td>
        <td>
            <span data-bind="text: FileUploadDateTime"></span>
        </td>
    </tr>
    </tbody>
</table>

<script type="text/javascript">
    function ViewModel() {
        var self = this;

        self.files = ko.observableArray();

        self.resetFiles = function() {
            self.files.removeAll();
        };

        self.addFiles = function(files) {
            for (var i = 0; i < files.length; i++) {
                self.files.push(files[i]);
            }
        };
    }

    var viewModel = new ViewModel([]);

    ko.applyBindings(viewModel);

    Dropzone.options.dropzoneForm = {
        acceptedFiles: ".xlsx,.csv,.txt,.zip",
        maxFilesize: 50,
        previewsContainer: false,
        clickable: "#uploadButton",
        dictDefaultMessage: "",
        dictInvalidFileType: "<b>File type not supported.</b> Review the supported file types above.",
        dictFileTooBig: "<b>File is too big.</b> File size must be {{maxFilesize}} MB or less.",
        dictResponseError: "<b>File upload failed.</b> The server returned status code {{statusCode}}.",

        init: function() {
            this.on("queuecomplete",
                function() {
                    $("#load-screen").fadeOut();
                });

            this.on("sending",
                function() {
                    $("#error-alert").fadeOut();
                    $("#load-screen").fadeIn();
                });

            this.on("error",
                function(file, errorMessage) {
                    if (errorMessage) {
                        $("#errorMessage").html(errorMessage);
                        $("#errorAlert").fadeIn();
                    }
                });
        }
    };

    var updateMetadata = function() {
        $.get('@Url.Action("GetAllFileMetadata", new {tenantId = Model.TenantId, cultureCode = Model.CultureCode})',
            function(data) {
                viewModel.resetFiles();
                viewModel.addFiles(data);
            });
    };
    $(function() {
        $("#uploadHeader").show();
        $("#uploadTable").show();

        updateMetadata();
        setInterval(updateMetadata, 2000);
    });
</script>