<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spp.Application.Api</name>
    </assembly>
    <members>
        <member name="M:Spp.Application.Api.Controllers.V1.AuthController.AuthenticateUser">
            <summary>
            Authenticate user with OAuth/ADv2 and validates that the user is registered with SPP Database
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.AuthController.AuthenticateUser(System.String)">
            <summary>
            Authenticates the user against SQL Database Users table using its Azure AD Object Id
            </summary>
            <param name="aadId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.AuthController.Get(System.Int32)">
            <summary>
            Retrieves the user entity by its User Id
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.AuthController.CreateUser(Spp.Application.Core.Models.UserDto)">
            <summary>
            Creates a new user
            </summary>
            <param name="userDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.AuthController.UpdateUser(Spp.Application.Core.Models.UserDto)">
            <summary>
            Updates the existing user
            </summary>
            <param name="userDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.AuthController.DeleteUser(Spp.Application.Core.Models.UserDto)">
            <summary>
            Delete the user with the specified UserId
            </summary>
            <param name="user"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.CognitiveServicesController.GetCSKeysForTeam(System.Int32)">
            <summary>
            Gets the Cognitive Services API Keys for the current team
            </summary>
            <param name="teamId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.CognitiveServicesController.CreateCognitiveServiceKeys(Spp.Application.Core.Models.CognitiveServiceKeysDto)">
            <summary>
            Stores new Cognitive Services API Keys into the Database
            </summary>
            <param name="csKeysDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.CognitiveServicesController.UpdateCognitiveServiceKeys(Spp.Application.Core.Models.CognitiveServiceKeysDto)">
            <summary>
            Updates the existing Cognitive Services Keys
            </summary>
            <param name="csKeysDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.CognitiveServicesController.AuthenticateUserByFace(System.Collections.Generic.IList{Spp.Application.Core.Models.UserIdentityDto})">
            <summary>
            Authenticates user using the face recognition
            </summary>
            <param name="userIdentities"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.CognitiveServicesController.DeleteCognitiveServicesKeys(System.Int32)">
            <summary>
            Deletes the Cognitive Services API Keys with the specified Id
            </summary>
            <param name="csId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.DrillController.GetAllDrills">
            <summary>
            Retrieves all drills
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.ImageController.GetImages">
            <summary>
            Returns the Images.
            </summary>
            <returns></returns>s
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.ImageController.CreateImage(Spp.Application.Core.Models.ImageDto)">
            <summary>
            Creates a new image
            </summary>
            <param name="imageDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.ImageController.UpdateImage(Spp.Application.Core.Models.ImageDto)">
            <summary>
            Updates the existing image
            </summary>
            <param name="imageDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.ImageController.DeleteImage(System.Int32)">
            <summary>
            Deletes the image using the specified  Id
            </summary>
            <param name="imageId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.LocationController.Get">
            <summary>
            Retrieves all locations
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.LocationController.CreateLocation(Spp.Application.Core.Models.LocationDto)">
            <summary>
            Creates a new location
            </summary>
            <param name="locationDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.MessageController.Get(System.Int32)">
            <summary>
            Retrieves the message content by its Id
            </summary>
            <param name="messageId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.MessageController.GetMessages(System.Int32)">
            <summary>
            Retrieves all messages for the current player
            </summary>
            <param name="playerId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.MessageController.AddMessage(Spp.Application.Core.Models.MessageDto)">
            <summary>
            Adds a new message to the database
            </summary>
            <param name="messageDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.MessageController.UpdateMessage(Spp.Application.Core.Models.MessageDto)">
            <summary>
            Updates the existing message
            </summary>
            <param name="messageDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.MessageController.DeleteMessage(System.Int32)">
            <summary>
            Deletes the message with the specified Id
            </summary>
            <param name="messageId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.MessageController.DeletePlayerMessages(System.Int32)">
            <summary>
            Deletes all messages for the current player
            </summary>
            <param name="playerId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PlayerResponseController.SaveResponse(Spp.Application.Core.Models.PlayerResponseDto)">
            <summary>
            Stores the player's response to the Questionnaire into the Database
            </summary>
            <param name="playerResponseDto"></param>
            <returns>Newly created response</returns>
            <response code="201">Returns the newly created PlayerResponseDto object</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PlayerResponseController.CreatePlayerResponse(Spp.Application.Core.Models.PlayerResponseDto)">
            <summary>
            Adds a new player's response
            </summary>
            <param name="playerResponseDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PlayerResponseController.Get(Spp.Application.Core.Models.PlayerResponseDto)">
            <summary>
            Retrieves the player's responses by the Player Id and Questionnaire Id
            </summary>
            <param name="playerResponseDto"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PlayerResponseController.Get(System.Int32,System.Int32)">
            <summary>
            Retrieves the player's responses by the Player Id and Questionnaire Id
            </summary>
            <param name="playerId"></param>
            <param name="questionnaireId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PlayerResponseController.UpdatePlayerResponse(Spp.Application.Core.Models.PlayerResponseDto)">
            <summary>
            Updates the existing response
            </summary>
            <param name="playerResponseDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PlayerResponseController.DeletePlayerResponse(System.Int32)">
            <summary>
            Deletes the response with the specified Id
            </summary>
            <param name="playerResponseId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PracticeController.GetAllPractices">
            <summary>
            Retrieves all practices
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PracticeController.GetSessionPractices(System.Int32)">
            <summary>
            Retrieves the list of practices for the current session Id
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PracticeController.GetPracticeDrills(System.Int32)">
            <summary>
            Retrieves all practice drills for the given practice
            </summary>
            <param name="practiceId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PracticeController.GetAllDrills">
            <summary>
            Retrieves all practice drills
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PracticeController.Get(System.Int32)">
            <summary>
            Retrieves the practice by its Id
            </summary>
            <param name="practiceId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PracticeController.CreatePractice(Spp.Application.Core.Models.PracticeDto)">
            <summary>
            Adds a new practice to the Db
            </summary>
            <param name="practiceDto"></param>
            <param name="note"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PracticeController.UpdatePractice(Spp.Application.Core.Models.PracticeDto)">
            <summary>
            Updates the existing practice
            </summary>
            <param name="practiceDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.PracticeController.DeletePractice(System.Int32)">
            <summary>
            Delete the practice with the specified Id
            </summary>
            <param name="practiceId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.QuestionnaireController.GetQuestionnaire(System.Int32)">
            <summary>
            Get the questioonnaire for the current session
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.QuestionnaireController.GetSessionQuestionnaires(System.Int32)">
            <summary>
            Get the list of questionnaires for the current session
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.QuestionnaireController.Get(System.Int32)">
            <summary>
            Retrieves questionnaire entity by its Id
            </summary>
            <param name="questionnaireId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.QuestionnaireController.GetQuestionResponse(System.Int32,System.Int32)">
            <summary>
            Retrieves question's response for the given session and player IDs
            </summary>
            <param name="sessionId"></param>
            <param name="playerId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.QuestionnaireController.CreateQuestionnaire(Spp.Application.Core.Models.AthleteQuestionnaireDto)">
            <summary>
            Creates a new questionnaire
            </summary>
            <param name="questionnaireDto"></param>
            <returns>Newly created questionnaireDto</returns>
            <response code="201">Returns the number of created records in the database</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.QuestionnaireController.UpdateQuestionnaire(Spp.Application.Core.Models.AthleteQuestionnaireDto)">
            <summary>
            Updates the existing questionnaire
            </summary>
            <param name="questionnaireDto"></param>
            <returns>Newly created questionnaireDto</returns>
            <response code="201">Returns the number of updated records</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.QuestionnaireController.RemoveQuestionnaire(System.Int32)">
            <summary>
            Deletes a questionnaire with the specified Id
            </summary>
            <param name="questionnaireId"></param>
            <returns>Newly created questionnaireDto</returns>
            <response code="201">Returns the number of updated records</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.Get(System.DateTime)">
            <summary>
            Retrieves the session for the specified date
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.Get(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the list of sessions within the specified dates range
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.CreateSession(Spp.Application.Core.Models.SessionDto)">
            <summary>
            Creates a new session
            </summary>
            <param name="sessionDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.Get(System.Int32)">
            <summary>
            Retrieves the session by its Id
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.GetSessionTypes">
            <summary>
            Retrieves all session types
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.UpdateSession(Spp.Application.Core.Models.SessionDto)">
            <summary>
            Updates the existing session
            </summary>
            <param name="sessionDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.DeleteSession(System.Int32)">
            <summary>
            Deletes the session with the specified Id
            </summary>
            <param name="sessionId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.AddUserToSession(Spp.Application.Core.Models.SessionDto)">
            <summary>
            Add collection of users to the specific session
            </summary>
            <param name="sessionDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SessionController.RemoveUsersFromSession(Spp.Application.Core.Models.SessionDto)">
            <summary>
            Add collection of users to the specific session
            </summary>
            <param name="sessionDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.GetPlayerPositions">
            <summary>
            Returns the player positions.
            </summary>
            <returns></returns>s
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.CreatePlayerPosition(Spp.Application.Core.Models.PlayerPositionDto)">
            <summary>
            Creates a new player position
            </summary>
            <param name="playerPositionDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.UpdatePlayerPosition(Spp.Application.Core.Models.PlayerPositionDto)">
            <summary>
            Updates the existing player position
            </summary>
            <param name="playerPositionDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.DeletePlayerPosition(System.Int32)">
            <summary>
            Deletes the player position using the specified  Id
            </summary>
            <param name="positionId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.GetSubPositions">
            <summary>
            Returns the sub positions.
            </summary>
            <returns></returns>s
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.CreateSubPosition(Spp.Application.Core.Models.SubPositionDto)">
            <summary>
            Creates a new sub position
            </summary>
            <param name="subPositionDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.UpdateSubPosition(Spp.Application.Core.Models.SubPositionDto)">
            <summary>
            Updates the existing sub position
            </summary>
            <param name="subPositionDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.DeleteSubPosition(System.Int32)">
            <summary>
            Deletes the sub position using the specified  Id
            </summary>
            <param name="subpositionId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.GetMesocycles">
            <summary>
            Returns the Mesocycles.
            </summary>
            <returns></returns>s
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.CreateMesocycle(Spp.Application.Core.Models.MesocycleDto)">
            <summary>
            Creates a new mesocycleDto
            </summary>
            <param name="mesocycleDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.UpdateMesocycle(Spp.Application.Core.Models.MesocycleDto)">
            <summary>
            Updates the existing mesocycle
            </summary>
            <param name="mesocycleDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.DeleteMesocycle(System.Int32)">
            <summary>
            Deletes the mesocycle using the specified  Id
            </summary>
            <param name="mesocycleId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.GetMicrocycles">
            <summary>
            Returns the microcycles.
            </summary>
            <returns></returns>s
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.CreateMicrocycle(Spp.Application.Core.Models.MicrocycleDto)">
            <summary>
            Creates a new microcycle
            </summary>
            <param name="microcycleDTO"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.UpdateSubPosition(Spp.Application.Core.Models.MicrocycleDto)">
            <summary>
            Updates the existing Microcycle
            </summary>
            <param name="microcycleDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.DeleteMicrocycle(System.Int32)">
            <summary>
            Deletes the microcycle using the specified  Id
            </summary>
            <param name="microsycleId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.SettingsController.AddSessionUser(Spp.Application.Core.Models.SessionUserDto)">
            <summary>
            Creates a new SessionUser
            </summary>
            <param name="sessionUserDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.GetAllTeams">
            <summary>
            Returns all teams
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.Get(System.Int32)">
            <summary>
            Returns the team for the specified Team Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.GetTeamByName(System.String)">
            <summary>
            Returns the team by the specified Team Name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.GetDomesticPlayers(System.Int32)">
            <summary>
            Returns the domestic players for the specified Team Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.GetTeamReadiness(System.Int32)">
            <summary>
            Retrieves Team Readiness data for the last 6 months and the current month for the given Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.GetNextTeamMatchInfo(System.Int32)">
            <summary>
            Retrieves information about the next match for the specified Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.GetMatchHistoryInfo(System.Int32)">
            <summary>
            Retrieves information about the all team matches for the specified team
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.GetPlayerReadiness(System.Int32)">
            <summary>
            Retrieves the information about readiness stats of all player for the specified Team Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.GetTeamImages(System.Int32)">
            <summary>
            Retrieves Team Images used in the gallery carousel
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.AddTeamImages(Spp.Application.Core.Models.TeamImagesDto)">
            <summary>
            Adds the list of images to the team
            </summary>
            <param name="teamImages"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.CreateTeam(Spp.Application.Core.Models.TeamDto)">
            <summary>
            Creates a new team
            </summary>
            <param name="teamDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.UpdateTeam(Spp.Application.Core.Models.TeamDto)">
            <summary>
            Updates the existing team
            </summary>
            <param name="teamDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.TeamController.DeleteTeam(System.Int32)">
            <summary>
            Deletes the team using the specified Team Id
            </summary>
            <param name="teamId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.WorkoutController.GetWorkouts">
            <summary>
            Retrieves all workouts
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.WorkoutController.GetSessionWorkout(System.Int32)">
            <summary>
            Retrieves the session workout for the specified session Id
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.WorkoutController.GetAllExercises">
            <summary>
            Retrieves all exercises
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.WorkoutController.CreateAthleteWorkout(Spp.Application.Core.Models.AthleteWorkoutDto)">
            <summary>
            Creates a new athlete workout
            </summary>
            <param name="workoutDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.WorkoutController.UpdateAthleteWorkout(Spp.Application.Core.Models.AthleteWorkoutDto)">
            <summary>
            Updates the existing workout
            </summary>
            <param name="workoutDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.WorkoutController.UpdateAthleteWorkoutExercise(Spp.Application.Core.Models.AthleteWorkoutDto)">
            <summary>
            Updates the existing workout exercises
            </summary>
            <param name="workoutDto"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.WorkoutController.DeleteAthleteWorkout(System.Int32)">
            <summary>
            Deletes the workout for the specified Id
            </summary>
            <param name="workoutId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="M:Spp.Application.Api.Controllers.V1.WorkoutController.DeleteAllSessionWorkouts(System.Int32)">
            <summary>
            Delete all workouts for the specified session Id
            </summary>
            <param name="sessionId"></param>
            <returns>true, if successfull; otherwise - false</returns>
            <response code="201">true, if successfull; otherwise - false</response>
            <response code="400">If the object is null</response>
        </member>
        <member name="T:Spp.Application.Api.Controllers.WellnessController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spp.Application.Api.Controllers.WellnessController.#ctor(Spp.Data.SppDbContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Spp.Application.Api.Controllers.WellnessController.Get(System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spp.Application.Api.Controllers.WellnessController.Post(Spp.Application.Core.Models.WellnessDto)">
            <summary>
            
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
    </members>
</doc>
